name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings
  MSRV: "1.67"

jobs:
  build_and_test_nix:
    name: Build and test (Nix)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [nightly, stable]

    steps:
    - name: Install FUSE (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y fuse libfuse-dev pkg-config

    - name: Configure fuse
      if: matrix.os == 'ubuntu-latest'
      run: echo 'user_allow_other' | sudo tee -a /etc/fuse.conf

    - name: Install FUSE (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        brew update
        brew install macfuse

    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
      
    - name: check
      run: cargo check --all --bins --tests
      
    - name: tests
      run: cargo test --all
      
  build_and_test_windows:
    name: Build and test (Windows)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        rust: [nightly, stable]
        target:
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
      
    - uses: msys2/setup-msys2@v2
    - name: check
      run: cargo check --all --bins --tests --target ${{ matrix.target }}
      
    - name: check bench
      if: matrix.rust == 'nightly'
      run: cargo check --target ${{ matrix.target }} --benches

    - name: tests
      run: cargo test --all  --target ${{ matrix.target }}

  cross:
    name: Cross compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - i686-unknown-linux-gnu
          - armv7-linux-androideabi
          - aarch64-linux-android

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install nightly
      # See https://github.com/cross-rs/cross/issues/1222
      uses: dtolnay/rust-toolchain@1.67

    - name: Install FUSE
      run: |
        sudo apt-get update
        sudo apt-get install -y fuse libfuse-dev pkg-config

    - name: Install cross
      run: cargo install cross

    - name: check
      run: cross check --all --target ${{ matrix.target }} -v

    - name: test
      run: cross test --all --target ${{ matrix.target }} -v

  check_fmt_and_docs:
    name: Checking fmt and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt

    - name: Install FUSE
      run: |
        sudo apt-get update
        sudo apt-get install -y fuse libfuse-dev pkg-config

    - name: fmt
      run: cargo fmt --all -- --check

    - name: Docs
      run: cargo doc

  clippy_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: dtolnay/rust-toolchain@stable
      with:
          components: clippy
    - name: Install FUSE
      run: |
        sudo apt-get update
        sudo apt-get install -y fuse libfuse-dev pkg-config

    - name: clippy check
      run: cargo clippy --message-format=json --all-features --all-targets

  msrv:
    name: Minimal Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ env.MSRV }}

    - name: Check MSRV all features
      run: |
        cargo +$MSRV check --workspace --all-targets --no-default-features
